---
name: Lint, test

# yamllint disable rule:truthy
on:
  pull_request:
    branches:
      - main

permissions:
  contents: write
  pages: write
  id-token: write

jobs:
  lint-py:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: 3.12
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements/main.txt -r requirements/dev.txt -r requirements/test.txt
      - name: pylint
        run: pylint --rcfile=pyproject.toml .
      - name: isort
        run: isort --check-only .
      - name: black
        run: black --check --config pyproject.toml .
      - name: mypy
        run: mypy --config pyproject.toml .
      - name: flake8
        run: flake8 --config=.flake8
      - name: pydocstyle
        run: pydocstyle --config pyproject.toml .
      - name: bandit
        run: bandit -r -c pyproject.toml .
      - name: yamllint
        run: yamllint -c .yamllint.yaml .
      - name: ruff
        run: ruff check --config pyproject.toml .

  lint-js:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
      - uses: actions/setup-python@v5
        with:
          python-version: 3.12
      - run: |
          corepack enable
          yarn set version stable
      - name: Install jlpm
        run: |
          python -m pip install --upgrade pip jupyterlab
      - name: Install dependencies
        run: jlpm install
      - name: Run linters
        run: jlpm lint

  test-py:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        python-version: ["3.10", "3.11", "3.12"]
        os: [ubuntu-latest, windows-latest, macos-latest]

    steps:
      - uses: actions/checkout@v4
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      - name: Display Python version
        run: python -c "import sys; print(sys.version)"
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements/main.txt -r requirements/dev.txt -r requirements/test.txt
      - name: Run tests
        run: |
          python -m pytest -c pyproject.toml --cov=waldiez_jupyter --cov-report lcov:reports/lcov.info
      - name: Report to Coveralls
        # only send latest Python version's report
        if: matrix.python-version == '3.12' && matrix.os == 'ubuntu-latest'
        uses: coverallsapp/github-action@v2
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          path-to-lcov: ./reports/lcov.info

  test-js:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
      - uses: actions/setup-python@v5
        with:
          python-version: 3.12
      - run: |
          corepack enable
          yarn set version stable
      - name: Install jlpm
        run: |
          python -m pip install --upgrade pip jupyterlab
      - name: Install dependencies
        run: jlpm install
      - name: Run tests
        run: yarn test
