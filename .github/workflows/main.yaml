---
name: Lint, test

env:
  HUSKY: 0

# yamllint disable rule:truthy
on:
  pull_request:
    branches: [main]
    types: [opened, synchronize, reopened, ready_for_review]
  push:
    branches: [main]
  merge_group:
  workflow_dispatch:

jobs:
  lint-py:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: 3.12
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip waldiez
          python -m pip install -r requirements/main.txt
          python -m pip install -r requirements/dev.txt
          python -m pip install -r requirements/test.txt
      - name: pylint
        run: pylint --rcfile=pyproject.toml .
      - name: isort
        run: isort --check-only .
      - name: black
        run: black --check --config pyproject.toml .
      - name: mypy
        run: mypy --config pyproject.toml .
      - name: flake8
        run: flake8 --config=.flake8
      - name: pydocstyle
        run: pydocstyle --config pyproject.toml .
      - name: bandit
        run: bandit -r -c pyproject.toml .
      - name: yamllint
        run: yamllint -c .yamllint.yaml .
      - name: ruff
        run: ruff check --config pyproject.toml .

  lint-js:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 22
      - uses: actions/setup-python@v5
        with:
          python-version: 3.12
      - run: |
          corepack enable
          yarn set version stable
      - name: Install jupyterlab/jlpm and waldiez
        run: |
          python -m pip install --upgrade pip waldiez jupyterlab
      - name: Install dependencies
        run: yarn install
      - name: Run linters
        run: yarn lint

  test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        python-version: ["3.10", "3.11", "3.12", "3.13"]
        os: [ubuntu-latest, windows-latest, macos-latest]

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Display Python version
        run: python -c "import sys; print(sys.version)"

      - uses: actions/setup-node@v4
        with:
          node-version: 22

      - name: Enable corepack
        run: corepack enable

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip waldiez
          python -m pip install -r requirements/main.txt
          python -m pip install -r requirements/dev.txt
          python -m pip install -r requirements/test.txt

      # js tests: only on python 3.12
      - uses: actions/setup-node@v4
        if: matrix.python-version == '3.12'
        with:
          node-version: 22

      - name: Enable corepack and set Yarn version
        if: matrix.python-version == '3.12'
        run: |
          corepack enable
          yarn set version stable

      - name: Install jupyterlab/jlpm and waldiez
        if: matrix.python-version == '3.12'
        run: |
          python -m pip install --upgrade pip waldiez jupyterlab

      - name: Install js dependencies
        if: matrix.python-version == '3.12'
        run: yarn install

      - name: Run js tests
        if: matrix.python-version == '3.12'
        run: yarn test

      - name: Run py tests
        run: |
          python -m pytest -c pyproject.toml --cov=waldiez_jupyter --cov-report lcov:coverage/py/lcov.info

      - name: install lcov
        if: matrix.python-version == '3.12' && matrix.os == 'ubuntu-latest'
        run: sudo apt update && sudo apt install -y lcov

      - name: Merge LCOV reports
        if: matrix.python-version == '3.12' && matrix.os == 'ubuntu-latest'
        run: python scripts/merge_lcov.py

      - name: Report to Coveralls
        # don't spam coveralls
        if: matrix.python-version == '3.12' && matrix.os == 'ubuntu-latest'
        uses: coverallsapp/github-action@v2
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          path-to-lcov: ./coverage/lcov.info
          fail-on-error: false

  # https://github.com/marketplace/actions/alls-green#why
  # This job does nothing and is only used for the branch protection
  alls-green:
    name: All Good
    if: always()
    runs-on: ubuntu-latest
    needs: [lint-py, lint-js, test]
    steps:
      - name: Decide whether the needed jobs succeeded or failed
        uses: re-actors/alls-green@release/v1
        with:
          jobs: ${{ toJSON(needs) }}
